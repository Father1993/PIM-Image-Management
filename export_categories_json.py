#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ Supabase –≤ JSON
"""

import os
import json
from supabase import create_client
from dotenv import load_dotenv

load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")


def main():
    try:
        print("üóÑÔ∏è –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Supabase...")
        client = create_client(SUPABASE_URL, SUPABASE_KEY)

        print("üìã –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")
        response = client.table("categories").select("*").order("level,id").execute()

        if response.data:
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(response.data)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
            output_file = "categories_export.json"
            with open(output_file, "w", encoding="utf-8") as f:
                json.dump(response.data, f, ensure_ascii=False, indent=2, default=str)

            print(f"üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {output_file}")
            print(f"üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞: {len(response.data)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —É—Ä–æ–≤–Ω—è–º
            levels = {}
            for category in response.data:
                level = category["level"]
                levels[level] = levels.get(level, 0) + 1

            print("üìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —É—Ä–æ–≤–Ω—è–º:")
            for level in sorted(levels.keys()):
                print(f"   Level {level}: {levels[level]} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")

        else:
            print("‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü–µ")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()
