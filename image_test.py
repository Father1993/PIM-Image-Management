import requests
from dotenv import load_dotenv
import os
import json

load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

PRODUCT_BASE = os.getenv("PRODUCT_BASE")
LOGIN = os.getenv("LOGIN_TEST")
PASSWORD = os.getenv("PASSWORD_TEST")
login_data = {"login": LOGIN, "password": PASSWORD, "remember": True}


def get_token():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    response = requests.post(f"{PRODUCT_BASE}/sign-in/", json=login_data)
    print("üîê –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")

    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ! –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω")
        return data["data"]["access"]["token"]
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.json()}")
        return None


def get_product(token, product_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(f"{PRODUCT_BASE}/product/{product_id}", headers=headers)

    print(f"\nüì¶ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –¢–û–í–ê–†–ï {product_id}")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")

    if response.status_code == 200:
        data = response.json()["data"]
        print(f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: {data['header']}")
        print(f"–ê—Ä—Ç–∏–∫—É–ª: {data['articul']}")
        print(f"–ë—Ä–µ–Ω–¥: {data['brand']['header']}")
        print(f"–ö–∞—Ç–∞–ª–æ–≥: {data['catalog']['header']}")
        print(f"–¶–µ–Ω–∞: {data['price']} —Ä—É–±.")
        print(f"–ê–∫—Ç–∏–≤–µ–Ω: {'–î–∞' if data['enabled'] else '–ù–µ—Ç'}")

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ä—Ç–∏–Ω–∫–µ
        if data.get("picture"):
            pic = data["picture"]
            print(f"üñºÔ∏è –ö–∞—Ä—Ç–∏–Ω–∫–∞:")
            print(f"   ID: {pic['id']}")
            print(f"   –ò–º—è: {pic['name']}")
            print(f"   –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {pic['sizeX']}x{pic['sizeY']}")
            print(f"   –¢–∏–ø: {pic['type']}")
        else:
            print("üñºÔ∏è –ö–∞—Ä—Ç–∏–Ω–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.json()}")


def delete_picture(token, product_id, picture_id):
    """–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.delete(
        f"{PRODUCT_BASE}/product/{product_id}/picture/{picture_id}", headers=headers
    )

    print(f"\nüóëÔ∏è –£–î–ê–õ–ï–ù–ò–ï –ö–ê–†–¢–ò–ù–ö–ò {picture_id}")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")

    if response.status_code == 200:
        print("‚úÖ –ö–∞—Ä—Ç–∏–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.json()}")


def upload_picture(token, product_id, image_path):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏"""
    headers = {"Authorization": f"Bearer {token}"}

    with open(image_path, "rb") as f:
        files = {"file": f}
        response = requests.post(
            f"{PRODUCT_BASE}/product/{product_id}/upload-picture",
            headers=headers,
            files=files,
        )

    print(f"\nüì§ –ó–ê–ì–†–£–ó–ö–ê –ö–ê–†–¢–ò–ù–ö–ò")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")

    if response.status_code == 200:
        print("‚úÖ –ö–∞—Ä—Ç–∏–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.json()}")


def main():
    print("üöÄ –ó–ê–ü–£–°–ö –°–ö–†–ò–ü–¢–ê API\n")

    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    token = get_token()
    if not token:
        print("‚ùå –û—Å—Ç–∞–Ω–æ–≤–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω")
        return

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
    product_id = 26886
    get_product(token, product_id)

    # –£–¥–∞–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
    picture_id = 14478
    # delete_picture(token, product_id, picture_id)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É (–∑–∞–º–µ–Ω–∏—Ç–µ –ø—É—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
    # upload_picture(token, product_id, "img.jpg")

    print("\n‚úÖ –í–°–ï –û–ü–ï–†–ê–¶–ò–ò –ó–ê–í–ï–†–®–ï–ù–´")


if __name__ == "__main__":
    main()
